# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-—Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –ø—Ä–∏
# –≤—ã–∑–æ–≤–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ k –∑–Ω–∞—á–µ–Ω–∏–π.
# üìå –ü–∞—Ä–∞–º–µ—Ç—Ä k –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–Ω–µ–µ –≤—ã–∑—ã–≤–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏
# –∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–æ–≤.


import json
from typing import Any


class Fact():

    _context_dict = dict()

    def __init__(self, k: int):
        self.k = k
        self.save_list = list()

    def __call__(self, value):
        res = 1
        for i in range(2, value + 1):
            res *= i
            self.save_list.append(res)
            if len(self.save_list) > self.k:
                self.save_list.pop(0)
        return self.save_list[-1]

    def __str__(self) -> str:
        return f'{self.save_list}'

# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á—É 1.
# üìå –°–æ–∑–¥–∞–π—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
# —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ JSON —Ñ–∞–π–ª.

    def mapper(self):
        for i, value in enumerate(self.save_list, start=1):
            self._context_dict[i] = value

    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        self.mapper()
        with open('json.json', "w") as f:
            json.dump(self._context_dict, f, indent=2)


if __name__ == "__main__":

    with Fact(5) as fact:
        # fact = Fact(5)
        print(fact(2))
        print(fact(3))
        print(fact(4))
        print(fact(5))
        print(fact(6))
        print(fact(7))
        print(fact(8))
        print(fact)
