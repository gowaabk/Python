# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ4
# üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3-
# —è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
# üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
# üìå –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.


from datetime import datetime


def parse_str(text: str):
    DAYS_IN_MOUNTH = 30
    week, day, month = text.split()
    week = int(week[0])
    day = parse_day(day)
    month = parse_month(month)
    year = datetime.now().year
    week_counter = 0
    for i in range(1, DAYS_IN_MOUNTH+1):
        data = datetime(day=i, month=month, year=year)
        if data.weekday() == day:
            week_counter += 1
            if week_counter == week:
                print(data)
                return data
    # return week, day, month, year


def parse_month(month: str) -> int:
    months = {'—è–Ω–≤': 1, '—Ñ–µ–≤': 2, '–º–∞—Ä': 3, '–∞–ø—Ä': 4, '–º–∞–π': 5, '–∏—é–Ω': 6,
              '–∏—é–ª': 7, '–∞–≤–≥': 8, '—Å–µ–Ω': 9, '–æ–∫—Ç': 10, '–Ω–æ—è': 11, '–¥–µ–∫': 12}
    return months.get(month[:3], None)


def parse_day(day: str) -> int:
    match day.lower():
        case '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
            return 0
        case '–≤—Ç–æ—Ä–Ω–∏–∫':
            return 1
        case '—Å—Ä–µ–¥–∞':
            return 2
        case '—á–µ—Ç–≤–µ—Ä–≥':
            return 3
        case '–ø—è—Ç–Ω–∏—Ü–∞':
            return 4
        case '—Å—É–±–±–æ—Ç–∞':
            return 5
        case '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
            return 6


if __name__ == "__main__":
    text = "1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è"
    print(parse_str(text))
